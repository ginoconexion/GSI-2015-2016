
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package fr.emac.pronostique;

import java.util.ArrayList;
import java.util.logging.Logger;

import calcul.util.client.CalculInterface;
import calcul.util.client.CalculService;
import calcul.util.client.CalculerPointsJoueurInput;
import fr.emac.gipsi.gsi.truptil.doa.ConnectionMongo;
import fr.emac.gipsi.gsi.truptil.element.Pronostic;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2015-12-15T23:45:10.418+01:00
 * Generated source version: 3.1.4
 * 
 */

@javax.jws.WebService(
		serviceName = "PronostiqueService",
		portName = "PronostiqueSOAP",
		targetNamespace = "http://www.emac.fr/pronostique/",
		endpointInterface = "fr.emac.pronostique.PronostiqueInterface")

public class PronostiqueSOAPImpl implements PronostiqueInterface {

	private static final Logger LOG = Logger.getLogger(PronostiqueSOAPImpl.class.getName());

	/* (non-Javadoc)
	 * @see fr.emac.pronostique.PronostiqueInterface#getPointJoueur(fr.emac.pronostique.GetPointJoueurInput  parameters )*
	 */
	public fr.emac.pronostique.GetPointJoueurResponse getPointJoueur(GetPointJoueurInput parameters) { 
		try {
			LOG.info("Executing operation getPointJoueur");
			System.out.println(parameters);

			GetPointJoueurResponse _return=ConnectionMongo.getInstance().getPointJoueur(parameters);

			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/* (non-Javadoc)
	 * @see fr.emac.pronostique.PronostiqueInterface#updatePointJoueur(fr.emac.pronostique.UpdatePointJoueurInput  parameters )*
	 */
	public fr.emac.pronostique.UpdatePointJoueurResponse updatePointJoueur(UpdatePointJoueurInput parameters) { 
		LOG.info("Executing operation updatePointJoueur");
		System.out.println(parameters);
		ConnectionMongo.getInstance().updatePointJoueur(parameters);
		try {
			fr.emac.pronostique.UpdatePointJoueurResponse _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/* (non-Javadoc)
	 * @see fr.emac.pronostique.PronostiqueInterface#addResultatReel(fr.emac.pronostique.AddResultatReelInput  parameters )*
	 */
	public fr.emac.pronostique.AddResultatReelResponse addResultatReel(AddResultatReelInput parameters) { 
		LOG.info("Executing operation addResultatReel");
		ConnectionMongo connectionMongo = ConnectionMongo.getInstance();
		System.out.println(parameters.idMatch);
		System.out.println(parameters.getScore1());
		System.out.println(parameters.getScore2());
		connectionMongo.addResultatReel(parameters);
		
		/** on instancie le service calcule */
		CalculInterface calcul = new CalculService().getCalculSOAP();
		CalculerPointsJoueurInput input = new CalculerPointsJoueurInput();
		
		/** on récupére la liste de pronostics concernant ce match */
		ArrayList<Pronostic> liste = connectionMongo.getPronosticsByMatch(parameters.getIdMatch());
		
		/** on parcourt la liste des pronostics */
		for (Pronostic pronostic : liste) {
			System.out.println(pronostic.getIdJoueur() + " " + pronostic.getIdMatch());
			
			input.setIdJoueur(pronostic.getIdJoueur());
			input.setIdMatch(pronostic.getIdMatch());
			input.setScore1(parameters.getScore1());
			input.setScore2(parameters.getScore2());
			input.setScoreProno1(pronostic.getScore1());
			input.setScoreProno2(pronostic.getScore2());
			
			/** calcul des nouveaux points du joueur à l'aide du WSCalcul */
			calcul.calculerPointsJoueur(input);
		}
		
		try {
			fr.emac.pronostique.AddResultatReelResponse _return = new AddResultatReelResponse();
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}

	/* (non-Javadoc)
	 * @see fr.emac.pronostique.PronostiqueInterface#addPronostic(fr.emac.pronostique.AddPronosticInput  parameters )*
	 */
	public fr.emac.pronostique.AddPronosticResponse addPronostic(AddPronosticInput parameters) { 
		LOG.info("Executing operation addPronostic");
		System.out.println(parameters);
		
		try {
			fr.emac.pronostique.AddPronosticResponse _return = ConnectionMongo.getInstance().addProno(parameters);
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
	}
	
	 /* (non-Javadoc)
     * @see fr.emac.pronostique.PronostiqueInterface#addJoueur(fr.emac.pronostique.AddJoueurInput  parameters )*
     */
    public fr.emac.pronostique.AddJoueurResponse addJoueur(AddJoueurInput parameters) { 
        LOG.info("Executing operation addJoueur");
        ConnectionMongo.getInstance().addJoueur(parameters);
		AddJoueurResponse _return = new AddJoueurResponse();
		return _return ;
    }

    /* (non-Javadoc)
     * @see fr.emac.pronostique.PronostiqueInterface#getAllJoueur(fr.emac.pronostique.GetAllJoueurInput  parameters )*
     */
    public fr.emac.pronostique.GetAllJoueurResponse getAllJoueur(GetAllJoueurInput parameters) { 
    	GetAllJoueurResponse res= ConnectionMongo.getInstance().getAllJoueur();
		return res ;
    }

    /* (non-Javadoc)
     * @see fr.emac.pronostique.PronostiqueInterface#getPronosticByJoueur(fr.emac.pronostique.GetPronosticByJoueurInput  parameters )*
     */
    public fr.emac.pronostique.GetPronosticByJoueurResponse getPronosticByJoueur(GetPronosticByJoueurInput parameters) { 
        LOG.info("Executing operation getPronosticByJoueur");
   		GetPronosticByJoueurResponse res=ConnectionMongo.getInstance().getPronoByGameByJoueur(parameters);
   		return res;
    }
}
