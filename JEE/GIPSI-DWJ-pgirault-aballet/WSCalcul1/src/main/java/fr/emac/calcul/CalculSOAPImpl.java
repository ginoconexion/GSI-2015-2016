
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package fr.emac.calcul;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

import fr.gsi.element.ResultatMatch;
import pronostic.util.client.GetPointJoueurInput;
import pronostic.util.client.PronostiqueInterface;
import pronostic.util.client.PronostiqueService;
import pronostic.util.client.UpdatePointJoueurInput;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2015-12-30T18:45:03.375+01:00
 * Generated source version: 3.1.4
 * 
 */

@javax.jws.WebService(
                      serviceName = "CalculService",
                      portName = "CalculSOAP",
                      targetNamespace = "http://www.emac.fr/calcul/",
                      endpointInterface = "fr.emac.calcul.CalculInterface")
                      
public class CalculSOAPImpl implements CalculInterface {

    private static final Logger LOG = Logger.getLogger(CalculSOAPImpl.class.getName());
    enum Resultat {VICTOIRE1, VICTOIRE2, NUL};

    /* (non-Javadoc)
     * @see fr.emac.calcul.CalculInterface#calculerPointsJoueur(fr.emac.calcul.CalculerPointsJoueurInput  parameters )*
     */
    public fr.emac.calcul.CalculerPointsJoueurResponse calculerPointsJoueur(CalculerPointsJoueurInput parameters) { 
    	LOG.info("Executing operation calculerPointsJoueur perso");
        System.out.println(parameters);
        
        PronostiqueInterface pronosticService = new PronostiqueService().getPronostiqueSOAP();
        GetPointJoueurInput input = new GetPointJoueurInput();
        input.setIdJoueur(parameters.getIdJoueur());
        int nbPoint = pronosticService.getPointJoueur(input).getNbPoints();
        System.out.println("nb points : " + nbPoint);
        
        ResultatMatch resultat = new ResultatMatch(parameters.getScore1(), parameters.getScore2());
        ResultatMatch pronostic = new ResultatMatch(parameters.getScoreProno1(), parameters.getScore2());
        
        
        UpdatePointJoueurInput inputPoint = new UpdatePointJoueurInput();
        inputPoint.setIdJoueur(parameters.getIdJoueur());
        
        System.out.println("Resultat match " + resultat.getResult());
        System.out.println("Resultat pronostic " + resultat.getResult());
        
        /** si score exact */
        if (resultat.equals(pronostic)){
        	nbPoint += 5;
        	inputPoint.setNbPoints(nbPoint);
        	pronosticService.updatePointJoueur(inputPoint);
        	System.out.println("Score exact");
        }
        /** si resultat exact */
        else if (resultat.getResult().equals(pronostic.getResult())) {
			nbPoint +=2;
			inputPoint.setNbPoints(nbPoint);
        	pronosticService.updatePointJoueur(inputPoint);
        	System.out.println("Resultat exact");
		}
        
        try {
            fr.emac.calcul.CalculerPointsJoueurResponse _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }
}
