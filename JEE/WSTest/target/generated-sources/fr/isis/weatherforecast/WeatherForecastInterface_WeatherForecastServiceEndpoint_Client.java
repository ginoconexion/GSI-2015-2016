
package fr.isis.weatherforecast;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.1.4
 * 2015-12-21T15:39:11.778+01:00
 * Generated source version: 3.1.4
 * 
 */
public final class WeatherForecastInterface_WeatherForecastServiceEndpoint_Client {

    private static final QName SERVICE_NAME = new QName("http://www.isis.fr/WeatherForecast/", "WeatherForecastService");

    private WeatherForecastInterface_WeatherForecastServiceEndpoint_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = WeatherForecastService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        WeatherForecastService ss = new WeatherForecastService(wsdlURL, SERVICE_NAME);
        WeatherForecastInterface port = ss.getWeatherForecastServiceEndpoint();  
        
        {
        System.out.println("Invoking getCities...");
        java.lang.String _getCities_input = "";
        fr.isis.weatherforecast.GetCitiesResponse _getCities__return = port.getCities(_getCities_input);
        System.out.println("getCities.result=" + _getCities__return);


        }
        {
        System.out.println("Invoking getWeather...");
        java.lang.String _getWeather_city = "";
        javax.xml.ws.Holder<java.lang.String> _getWeather_date = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _getWeather_temperature = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _getWeather_humidity = new javax.xml.ws.Holder<java.lang.String>();
        javax.xml.ws.Holder<java.lang.String> _getWeather_uselessInformation = new javax.xml.ws.Holder<java.lang.String>();
        port.getWeather(_getWeather_city, _getWeather_date, _getWeather_temperature, _getWeather_humidity, _getWeather_uselessInformation);

        System.out.println("getWeather._getWeather_date=" + _getWeather_date.value);
        System.out.println("getWeather._getWeather_temperature=" + _getWeather_temperature.value);
        System.out.println("getWeather._getWeather_humidity=" + _getWeather_humidity.value);
        System.out.println("getWeather._getWeather_uselessInformation=" + _getWeather_uselessInformation.value);

        }

        System.exit(0);
    }

}
